{"version":3,"file":"static/js/560.d128da03.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Posts.module.css?ee55","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withrouter.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__4+P3q\",\"item\":\"MyPosts_item__tEWX8\",\"newpost\":\"MyPosts_newpost__HL9uX\",\"addButton\":\"MyPosts_addButton__WQaY3\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Posts_item__ow4IS\"};","import React from \"react\";\r\nimport s from \"./Posts.module.css\";\r\n\r\nconst Posts = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img  src=\"https://astroliudmila.ru/wp-content/uploads/2018/12/%D0%9B%D0%B5%D0%BE%D0%BD%D0%B0%D1%80%D0%B4%D0%BE-%D0%B4%D0%B8-%D0%9A%D0%B0%D0%BF%D1%80%D0%B8%D0%BE-e1544517806855.jpg\" />\r\n      {props.text}\r\n      <div>\r\n        <span>{props.likeCount} like</span>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport { addPostActionCreator, updatePostActionCreator } \r\nfrom \"../../../redux/profile_reducer\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Posts from \"./Post/Post\";\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLength15, maxLength30, maxLength5, requiredField } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../../utils/validators/formscontrol\";\r\n\r\n{/* <form >\r\n    <div>\r\n        <textarea\r\n          ref={newPostEl}\r\n          value={props.newPostText}\r\n          onChange={onPostChange}\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div>\r\n        <button className={s.addButton} onClick={onAddPost}>\r\n          Add Post\r\n        </button>\r\n      </div>\r\n  </form> */}\r\n\r\n\r\nconst  MyPosts = (props)  => {\r\n  \r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps!=this.props || nextState!=this.state\r\n  // }\r\n\r\n  \r\n    console.log('Render myPosts')\r\n    \r\n  \r\n    let postElement = props.posts.map((p) => (\r\n      <Posts text={p.text} likeCount={p.likeCount} />\r\n    ));\r\n      \r\n  \r\n  const addNewPost = (values) => {\r\n    props.addPost(values.newposttext);\r\n  }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className={s.posts}>\r\n          <h3>MyPosts</h3>\r\n        </div>\r\n        <div className={s.newpost}>NewPosts</div>\r\n  \r\n        <PostReduxForm onSubmit={addNewPost} />\r\n  \r\n        <div className={s.posts}>{postElement}</div>\r\n      </div>\r\n    );\r\n  \r\n};\r\n\r\nconst PostForm = (props) => {\r\n  \r\n  return (\r\n  <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field placeholder=\" your post...\"\r\n      name=\"newposttext\"\r\n      component={Textarea}\r\n      validate={[requiredField, maxLength30]} />\r\n        {/* <textarea\r\n          ref={newPostEl}\r\n          value={props.newPostText}\r\n          onChange={onPostChange}\r\n        ></textarea> */}\r\n      </div>\r\n\r\n      <div>\r\n        \r\n        <button> {/*className={s.addButton} onClick={onAddPost}>*/}\r\n          Add Post\r\n        </button>\r\n      </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({form: 'addnewpost'})(PostForm)\r\n\r\n\r\nexport default React.memo(MyPosts);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addPostActionCreator,\r\n  updatePostActionCreator,\r\n} from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n// const MyPostsContainer = () => {\r\n//    return (\r\n//     <StoreContext.Consumer>\r\n//       { (store) => {\r\n//         let state = store.getState();\r\n\r\n//         let addPost = () => {\r\n//           store.dispatch(addPostActionCreator());\r\n//         };\r\n\r\n//         let onPostChange = (text) => {\r\n//           let action = updatePostActionCreator(text);\r\n//           store.dispatch(action);\r\n//         };\r\n\r\n//         return (\r\n//         <MyPosts\r\n//             updateNewPostText={onPostChange}\r\n//             addPost={addPost}\r\n//             posts={state.profilePage.posts}\r\n//             newPostText={state.profilePage.newPostText}\r\n//           />\r\n//         )\r\n//       }      }\r\n      \r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    \r\n            posts: state.profilePage.posts, \r\n            newPostText: state.profilePage.newPostText\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispath) => {\r\n  return {\r\n    // updateNewPostText: (text) => {\r\n    //   dispath(updatePostActionCreator(text))\r\n    // },\r\n\r\n    addPost: (newposttext) => {\r\n      dispath(addPostActionCreator(newposttext))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"myimg\":\"ProfileInfo_myimg__oIeWY\",\"content\":\"ProfileInfo_content__Dx5FE\",\"profileDescription\":\"ProfileInfo_profileDescription__nsbvM\",\"img\":\"ProfileInfo_img__Arutn\"};","\r\nimport { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect( () => {\r\n    \r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {(!editMode) &&\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"---- HOOKS\"}\r\n          </span>\r\n        </div>\r\n      }\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        className={s.img}\r\n        src=\"https://million-wallpapers.ru/wallpapers/0/91/15361566653242396479/kapli-na-zelenoj-poverxnosti.jpg\"\r\n      />\r\n\r\n      <div className={s.profileDescription}>\r\n        <img src={props.profile.photos.large} />\r\n\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","\r\nimport React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../redux/profile_reducer\"\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"../../hoc/withrouter\";\r\n\r\n\r\n// export const GetIdFromUrl = () => {\r\n//   const  {id} = useParams();\r\n\r\n//   return {id}\r\n// }\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n\r\n    let userID = this.props.match.params.userID\r\n    \r\n    if (!userID) {\r\n      userID = this.props.authUserID\r\n    }\r\n\r\n    this.props.getUserProfile(userID);\r\n    this.props.getStatus(userID);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <Profile {...this.props} profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        />\r\n\r\n    );\r\n\r\n  }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    isAuth: state.auth.isAuth,\r\n    authUserID: state.auth.id\r\n\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  \r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n","import { useMatch } from \"react-router-dom\";\r\n\r\nexport const withRouter = (Component) => {\r\n  \r\n    let RouterComponent = (props) => { \r\n      const match = useMatch('/profile/:userID');\r\n      return <Component {...props} match={match} />;\r\n    }\r\n    return RouterComponent;\r\n  }"],"names":["props","className","s","src","text","likeCount","MyPosts","console","log","postElement","posts","map","p","Post","PostReduxForm","onSubmit","values","addPost","newposttext","reduxForm","form","handleSubmit","Field","placeholder","name","component","Textarea","validate","requiredField","maxLength30","React","connect","state","profilePage","newPostText","dispath","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","target","value","autoFocus","onBlur","updateStatus","profile","photos","large","Preloader","ProfileContainer","userID","this","match","params","authUserID","getUserProfile","getStatus","compose","isAuth","auth","id","Component","useMatch","withAuthRedirect"],"sourceRoot":""}