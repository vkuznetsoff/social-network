{"version":3,"file":"static/js/41.a5664087.chunk.js","mappings":"2OACA,EAA0B,yBAA1B,EAAgE,4BAAhE,EAAyG,4BAAzG,EAA8I,wBAA9I,EAAoL,6BAApL,EAA+N,6B,mBCGzNA,EAAY,SAACC,GAAD,OAAWA,EAAKC,SAAWC,EAAWA,GAexD,EAbmB,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,iBAAKC,UAAWJ,EAAhB,WACE,gBAAKK,IAAI,8GAET,SAAC,KAAD,CAASC,GAAIJ,EAAME,UAAWP,EAA9B,SACGI,EAAMM,WCAf,EALoB,SAACN,GACnB,OAAO,gBAAKG,UAAWJ,EAAhB,SAAgCC,EAAMO,QCmEzCC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,kBAAlBD,EAzBL,SAACT,GACtB,OACE,kBAAMW,SAAUX,EAAMY,aAAtB,WACE,0BACE,SAACC,EAAA,EAAD,CACEC,YAAY,uBACZR,KAAK,iBACLS,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,GAAeC,EAAAA,SAS9B,0BAEE,qDAUR,EAlEgB,SAACnB,GAef,IAAIoB,EAAUpB,EAAMqB,WAAWD,QAAQE,KAAI,SAACC,GAAD,OACzC,SAAC,EAAD,CAAYrB,GAAIqB,EAAErB,GAAII,KAAMiB,EAAEjB,UAE5BkB,EAAWxB,EAAMqB,WAAWG,SAASF,KAAI,SAACG,GAAD,OAC3C,SAAC,EAAD,CAAalB,KAAMkB,EAAElB,UAOvB,OACE,iBAAKJ,UAAWJ,EAAhB,WACE,gBAAKI,UAAWJ,EAAhB,SAA+BqB,KAE/B,gBAAKjB,UAAWJ,EAAhB,SAAgCyB,KAEhC,SAAChB,EAAD,CAAqBG,SAVH,SAACe,GACrB1B,EAAM2B,YAAYD,EAAOE,uBC4B7B,GAAeC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KA1BoB,SAACC,GAErB,MAAO,CACLV,WAAYU,EAAMV,eAKG,SAACW,GACxB,MAAO,CACLL,YAAa,SAACM,GACZD,GAASE,EAAAA,EAAAA,GAAyBD,SAgBtCE,EAAAA,EAFF,CAICC","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DilogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__hrR58\",\"dialogList\":\"Dialogs_dialogList__NEoSt\",\"dialogItem\":\"Dialogs_dialogItem__hroZU\",\"active\":\"Dialogs_active__zg0T9\",\"messageList\":\"Dialogs_messageList__Owfph\",\"messageItem\":\"Dialogs_messageItem__56pnq\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst setActive = (Data) => (Data.isActive ? s.active : s.dialogItem);\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialogItem}>\r\n      <img src=\"https://e7.pngegg.com/pngimages/442/17/png-clipart-computer-icons-user-profile-male-user-heroes-head.png\" />\r\n\r\n      <NavLink to={path} className={setActive}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\n\r\n\r\n\r\nconst MessageItem = (props) => {\r\n  return <div className={s.messageItem}>{props.text}</div>;\r\n};\r\n\r\n\r\nexport default MessageItem;\r\n","import React from \"react\";\r\nimport { Navigate, NavLink } from \"react-router-dom\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Field } from \"redux-form\";\r\nimport {\r\n  sendMessageActionCreator,\r\n  updateMessageActionCreator,\r\n} from \"../../redux/dialogs_reducer\";\r\nimport { Textarea } from \"../../utils/validators/formscontrol\";\r\nimport { maxLength30, requiredField } from \"../../utils/validators/validators\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DilogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\n\r\nconst Dialogs = (props) => {\r\n  // let newMessageEl = React.createRef();\r\n  // let state = props.dialogPage;\r\n\r\n  // let onSendMessage = () => {\r\n  //   props.sendMessage();\r\n  // };\r\n\r\n  // let onMessageTextChange = (e) => {\r\n  //   //let text = newMessageEl.current.value;\r\n  //   let text = e.target.value;\r\n  //   props.updateNewMessageText(text);\r\n\r\n  // };\r\n\r\n  let dialogs = props.dialogPage.dialogs.map((d) => (\r\n    <DialogItem id={d.id} name={d.name} />\r\n  ));\r\n  let messages = props.dialogPage.messages.map((m) => (\r\n    <MessageItem text={m.text} />\r\n  ));\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newmessagetext);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogList}>{dialogs}</div>\r\n\r\n      <div className={s.messageList}>{messages}</div>\r\n\r\n      <AddMessageReduxForm onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder=\"Enter new message...\"\r\n          name=\"newmessagetext\"\r\n          component={Textarea}\r\n          validate={[requiredField, maxLength30]}\r\n        />\r\n        {/* <textarea\r\n          ref={newMessageEl}\r\n          onChange={onMessageTextChange}\r\n          value={props.dialogPage.newMessageText}\r\n        ></textarea> */}\r\n      </div>\r\n\r\n      <div>\r\n        {/* // onClick={onSendMessage} */}\r\n        <button>Send message</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: \"newmessagetext\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n  sendMessageActionCreator,\r\n  updateMessageActionCreator,\r\n} from \"../../redux/dialogs_reducer\";\r\n\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n// const DialogsContainer = () => {\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {(store) => {\r\n//         // let state = store.getState();\r\n\r\n//         let sendMessage = () => {\r\n//           store.dispatch(sendMessageActionCreator());\r\n//         };\r\n\r\n//         let updateNewMessageText = (text) => {\r\n//           // props.store.dispatch(updateMessageActionCreator(text))\r\n//           let action = updateMessageActionCreator(text);\r\n//           store.dispatch(action);\r\n//         };\r\n\r\n//         return (\r\n//           <Dialogs\r\n//             sendMessage={sendMessage}\r\n//             updateNewMessageText={updateNewMessageText}\r\n//             dialogPage={store.getState().dialogPage}\r\n//           />\r\n//         );\r\n//       }}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n  return {\r\n    dialogPage: state.dialogPage\r\n    \r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newmessage) => {\r\n      dispatch(sendMessageActionCreator(newmessage));\r\n    }\r\n\r\n    // updateNewMessageText: (text) => {\r\n    //   dispatch(updateMessageActionCreator(text))\r\n    // }\r\n\r\n  };\r\n};\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (AuthRedirectComponent); //Dialogs-компоненту законнектили к Store\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)\r\n(Dialogs);\r\n"],"names":["setActive","Data","isActive","s","props","path","id","className","src","to","name","text","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","requiredField","maxLength30","dialogs","dialogPage","map","d","messages","m","values","sendMessage","newmessagetext","compose","connect","state","dispatch","newmessage","sendMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}